CREATE DATABASE IF NOT EXISTS partDB;
USE partDB;
DROP TABLE IF EXISTS partTBL;
CREATE TABLE partTBL
( userID CHAR(8) NOT NULL, -- 기본키로 설정하면 안 됨
userName VARCHAR(10) NOT NULL,
birthYear INT NOT NULL,
addr CHAR(2) NOT NULL
)
PARTITION BY RANGE(birthYear)
(
PARTITION part1 VALUES LESS THAN (1970),
PARTITION part2 VALUES LESS THAN (1972),
PARTITION part3 VALUES LESS THAN MAXVALUE
);

INSERT INTO partTBL
SELECT userID, userName, birthYear, addr FROM cookDB.userTBL;

SELECT * FROM partTBL;

-- 파티션 정보 확인하기
SELECT TABLE_SCHEMA, TABLE_NAME, PARTITION_NAME, PARTITION_ORDINAL_POSITION,
TABLE_ROWS
FROM INFORMATION_SCHEMA.PARTITIONS
WHERE TABLE_NAME = 'parttbl';

-- 1970년 전에 출생한 회원 조회
SELECT * FROM partTBL WHERE birthYear < 1970;

-- 어떤 파티션을 사용했는지 확인
EXPLAIN
SELECT * FROM partTBL WHERE birthYear <= 1970;

ALTER TABLE partTBL
REORGANIZE PARTITION part3 INTO (
PARTITION part3 VALUES LESS THAN (1974),
PARTITION part4 VALUES LESS THAN MAXVALUE
);
OPTIMIZE TABLE partTBL;

SELECT TABLE_SCHEMA, TABLE_NAME, PARTITION_NAME, PARTITION_ORDINAL_POSITION,
TABLE_ROWS
FROM INFORMATION_SCHEMA.PARTITIONS
WHERE TABLE_NAME = 'parttbl';

ALTER TABLE partTBL
REORGANIZE PARTITION part1, part2 INTO (
PARTITION part12 VALUES LESS THAN (1972)
);
OPTIMIZE TABLE partTBL;

SELECT TABLE_SCHEMA, TABLE_NAME, PARTITION_NAME, PARTITION_ORDINAL_POSITION,
TABLE_ROWS
FROM INFORMATION_SCHEMA.PARTITIONS
WHERE TABLE_NAME = 'parttbl';

ALTER TABLE partTBL DROP PARTITION part12;
OPTIMIZE TABLE partTBL;

SELECT * FROM partTBL;